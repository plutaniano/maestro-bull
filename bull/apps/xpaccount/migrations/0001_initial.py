# Generated by Django 3.2.13 on 2022-06-30 00:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetsWarranty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Aplicações na XP')),
                ('financial_investments', models.DecimalField(decimal_places=2, help_text='Não é usado no frontend da XP', max_digits=20, verbose_name='financialInvestments')),
                ('margin_account', models.DecimalField(decimal_places=2, help_text='Não é usado no frontend da XP', max_digits=12, verbose_name='marginAccount')),
                ('patrimony', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Patrimônio XP')),
                ('declared_patrimony', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Patrimônio Líquido Declarado')),
                ('updated_at', models.DateTimeField(verbose_name='Atualizado em')),
                ('fresh', models.BooleanField(default=False, verbose_name='Positions mais atualizada')),
                ('queried_at', models.DateTimeField(auto_now_add=True, verbose_name='Query na API feita em')),
                ('raw_json', models.JSONField(verbose_name='JSON cru da API da XP')),
            ],
        ),
        migrations.CreateModel(
            name='StructuredProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Custo')),
                ('name', models.CharField(max_length=256, verbose_name='Nome da Estrutura')),
                ('end_date', models.DateField(verbose_name='Data de Encerramento')),
                ('percent', models.FloatField(verbose_name='Porcento')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structured_product', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='XPAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Conta XP')),
                ('name', models.CharField(default='CLIENTE DESCONHECIDO', max_length=128, verbose_name='Nome')),
                ('cpf', models.CharField(default='', max_length=11, verbose_name='CPF')),
                ('cnpj', models.CharField(default='', max_length=14, verbose_name='CNPJ')),
                ('cellphone', models.CharField(default='', max_length=32, verbose_name='Celular')),
                ('phone', models.CharField(default='', max_length=32, verbose_name='Telefone')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='Email')),
                ('income', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Renda mensal')),
                ('occupation', models.CharField(default='', max_length=128, verbose_name='Ocupação')),
                ('state', models.CharField(choices=[('ac', 'Acre'), ('al', 'Alagoas'), ('am', 'Amazonas'), ('ap', 'Amapá'), ('ba', 'Bahia'), ('ce', 'Ceará'), ('df', 'Distrito Federal'), ('es', 'Espírito Santo'), ('go', 'Goiás'), ('ma', 'Maranhão'), ('mg', 'Minas Gerais'), ('ms', 'Mato Grosso do Sul'), ('mt', 'Mato Grosso'), ('pa', 'Pará'), ('pb', 'Paraíba'), ('pe', 'Pernambuco'), ('pi', 'Piauí'), ('pr', 'Paraná'), ('rj', 'Rio de Janeiro'), ('rn', 'Rio Grande do Norte'), ('ro', 'Rondônia'), ('rr', 'Roraima'), ('rs', 'Rio Grande do Sul'), ('sc', 'Santa Catarina'), ('se', 'Sergipe'), ('sp', 'São Paulo'), ('to', 'Tocantins')], default='', max_length=2, verbose_name='Estado')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('suitability', models.CharField(choices=[('aggressive', 'Agressivo'), ('moderate', 'Moderado'), ('conservative', 'Conservador'), ('out_of_date', 'Desatualizado'), ('not_filled', 'Não preenchido')], default='', max_length=12, verbose_name='Suitability')),
                ('suitability_due', models.DateField(blank=True, help_text='Data em que o suitability do cliente ficará desatualizado', null=True, verbose_name='Vencimento do suitability')),
                ('investor_qualification', models.CharField(choices=[('regular', 'Regular'), ('qualified', 'Qualificado'), ('professional', 'Profissional')], default='', max_length=64, verbose_name='Qualificação de Investidor')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Saldo disponível')),
                ('patrimony', models.DecimalField(decimal_places=2, default=0, help_text='Soma de todos os investimentos na conta', max_digits=12, verbose_name='Patrimônio na XP')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data em que o cliente foi adicionado ao banco de dados da Maestro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('xp_updated_at', models.DateTimeField(help_text='Data/hora em que a XP realizou a atualização do cliente', null=True, verbose_name='Atualizado pela XP em')),
                ('in_base', models.BooleanField(help_text='Se o cliente estiver na base do escritório, esse campos será `True`', verbose_name='Na base de clientes')),
                ('is_mesa_rv', models.BooleanField(default=False, help_text='Clientes alinhados com a estrátegia da Mesa RV terão `True` nesse campo', verbose_name='Está na Mesa RV')),
                ('mesa_rv_reference', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Referência Mesa RV')),
                ('hubspot_id', models.IntegerField(blank=True, null=True, verbose_name='ID HubSpot')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='clients', to=settings.AUTH_USER_MODEL, verbose_name='Assessor')),
                ('positions', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='linked_to', to='xpaccount.positions')),
            ],
            options={
                'verbose_name': 'Conta XP',
                'verbose_name_plural': 'Contas XP',
                'ordering': ['id'],
                'get_latest_by': 'positions__updated',
            },
        ),
        migrations.CreateModel(
            name='Treasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Disponível')),
                ('due_date', models.DateField(verbose_name='Data de vencimento')),
                ('last_quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Última cotação')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('product_id', models.IntegerField(verbose_name='ID do produto')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('title', models.CharField(choices=[('lft', 'LFT'), ('ltn', 'LTN'), ('ntnb', 'NTN-B'), ('ntnb_principal', 'NTN-B Principal'), ('ntnc', 'NTN-C'), ('ntnf', 'NTN-F')], max_length=64, verbose_name='Título')),
                ('type', models.CharField(choices=[('lft', 'LFT'), ('ltn', 'LTN'), ('ntnb', 'NTN-B'), ('ntnb_principal', 'NTN-B Principal'), ('ntnc', 'NTN-C'), ('ntnf', 'NTN-F')], max_length=64, verbose_name='Tipo')),
                ('type_code', models.IntegerField(verbose_name='typeCode')),
                ('warranty', models.IntegerField(verbose_name='Em garantia')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treasure', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(verbose_name='Data de vencimento')),
                ('entry_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço de entrada')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('last_quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Última cotação')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('roll_date', models.DateField(verbose_name='Data de rolagem')),
                ('ticker', models.CharField(max_length=64, verbose_name='Ativo')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='StructuredProductLeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=12, verbose_name='Ativo')),
                ('contracted_quantity_position', models.IntegerField(verbose_name='quantidadeContratadaPosicao')),
                ('contracted_quantity', models.IntegerField(verbose_name='Quantidade contratada')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='Descrição')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data de encerramento')),
                ('financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro')),
                ('fixing_date', models.DateField(blank=True, null=True, verbose_name='Data de fixing')),
                ('fixing_type', models.CharField(blank=True, choices=[('closing', 'Fechamento')], max_length=64, null=True, verbose_name='Tipo Fixing')),
                ('liquidation_date', models.DateField(blank=True, null=True, verbose_name='Data de liquidação')),
                ('option_type', models.CharField(choices=[('call', 'Call'), ('put', 'Put'), ('spot', 'Spot')], max_length=64, verbose_name='Tipo')),
                ('position_quantity', models.IntegerField(verbose_name='Quantidade contratada')),
                ('strike', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de exercício')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('out_of_spec', 'Desenquadrada')], max_length=64, verbose_name='Status')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legs', to='xpaccount.structuredproduct', verbose_name='Estrutura')),
            ],
        ),
        migrations.CreateModel(
            name='RewardedAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Cotação')),
                ('financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('ticker', models.CharField(max_length=128, verbose_name='Ticker')),
                ('expiry_date', models.DateField(verbose_name='Data de vencimento')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewarded_asset', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Quantidade')),
                ('average_cost_status', models.IntegerField(verbose_name='averageCostStatus')),
                ('average_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço médio')),
                ('counterparty_type', models.CharField(choices=[('lender', 'Doador'), ('borrower', 'Tomador')], max_length=64, verbose_name='Doador/Tomador')),
                ('last_quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Última cotação')),
                ('maturity', models.DateField(verbose_name='Data de vencimento')),
                ('performance', models.FloatField(verbose_name='Rentabilidade')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('structured_amount', models.IntegerField(verbose_name='Total estruturado')),
                ('ticker', models.CharField(max_length=64, verbose_name='Ticker')),
                ('total_amount', models.IntegerField(verbose_name='Quantidade total')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='RealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço médio')),
                ('average_cost_status', models.IntegerField(verbose_name='averageCostStatus')),
                ('last_quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Última cotação')),
                ('performance', models.FloatField(verbose_name='Rentabilidade')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('quantity_available', models.IntegerField(verbose_name='Quantidade disponível')),
                ('quantity_blocked', models.IntegerField(verbose_name='Quantidade bloqueada')),
                ('quantity_day', models.IntegerField(verbose_name='Quantidade do dia')),
                ('quantity_projected', models.IntegerField(verbose_name='Quantidade projetada')),
                ('quantity_total', models.IntegerField(verbose_name='Quantidade total')),
                ('ticker', models.CharField(max_length=64, verbose_name='Ativo')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_estate', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='PrivatePension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=256, verbose_name='Ativo')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo')),
                ('certificate', models.IntegerField(verbose_name='Certificado')),
                ('cnpj', models.CharField(max_length=16, verbose_name='CNPJ')),
                ('contribution', models.CharField(choices=[('sporadic', 'Esporádica'), ('monthly', 'Mensal')], max_length=64, verbose_name='Contribuição')),
                ('gross_income', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Rendimento bruto')),
                ('insured', models.CharField(max_length=256, verbose_name='Segurado')),
                ('insurer', models.CharField(max_length=64, verbose_name='Seguradora')),
                ('payment', models.CharField(choices=[('boleto', 'Boleto'), ('debit', 'Débito em Conta Corrente'), ('debit_from_xp_account', 'Débito em Conta XP'), ('unidentified', 'Não Identificado')], max_length=64, verbose_name='Forma de pagamento')),
                ('plan', models.CharField(choices=[('pgbl', 'PGBL'), ('vgbl', 'VGBL')], max_length=64, verbose_name='Plano')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('proposal_code', models.BigIntegerField(verbose_name='Código da proposta')),
                ('quota_date', models.DateField(verbose_name='Data da Cota')),
                ('quota_value', models.FloatField(verbose_name='Valor da cota')),
                ('quotas', models.FloatField(verbose_name='Quantidade de cotas')),
                ('taxation', models.CharField(choices=[('regressive', 'Regressivo'), ('progressive', 'Progressive')], max_length=64, verbose_name='Tributação')),
                ('start_date', models.DateField(verbose_name='Inicio vigência')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('blocked', 'Bloqueado'), ('cancelled', 'Cancelado'), ('pending', 'Pendente')], max_length=64, verbose_name='Status')),
                ('susep', models.CharField(max_length=32, verbose_name='Processo SUSEP')),
                ('total_invested', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total aplicado')),
                ('total_rescue', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total de resgates')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='private_pension', to='xpaccount.positions')),
            ],
        ),
        migrations.AddField(
            model_name='positions',
            name='xp_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='positions_history', to='xpaccount.xpaccount', verbose_name='Conta XP'),
        ),
        migrations.CreateModel(
            name='OTCOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=64, verbose_name='Ativo')),
                ('current_factor', models.FloatField(verbose_name='Current Factor')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='Descrição')),
                ('expiration_code', models.IntegerField(blank=True, null=True, verbose_name='Código de vencimento')),
                ('expiry_date', models.DateField(verbose_name='Data de vencimento')),
                ('fixing_date', models.DateField(verbose_name='Data de fixing')),
                ('fixing_type', models.CharField(choices=[('last', 'Último')], max_length=32, verbose_name='Tipo de fixing')),
                ('framing_category', models.IntegerField(choices=[(4, 'Four')], verbose_name='Framing Category')),
                ('opening_margin_max', models.FloatField(verbose_name='openingMarginMax')),
                ('opening_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de abertura')),
                ('position_date', models.DateField(verbose_name='Data da posição')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('settlement_date', models.DateField(verbose_name='Data de liquidação')),
                ('opening_amount', models.IntegerField(verbose_name='Quantidade/Volume')),
                ('type', models.CharField(choices=[('swap', 'SWAP'), ('put', 'Put'), ('call', 'Call')], max_length=64, verbose_name='Tipo')),
                ('underlying', models.CharField(max_length=64, verbose_name='Ativo objeto')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otc_option', to='xpaccount.positions')),
                ('xp_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='xpaccount.xpaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_quantity', models.IntegerField(verbose_name='Quantidade disponível')),
                ('day_quantity', models.IntegerField(verbose_name='Quantidade do dia')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Data de vencimento')),
                ('financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro')),
                ('quote', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Cotação')),
                ('series', models.CharField(max_length=128, verbose_name='Série')),
                ('strike_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço do strike')),
                ('total_quantity', models.IntegerField(verbose_name='Quantidade total')),
                ('style', models.CharField(choices=[('american', 'Americana'), ('european', 'Européia')], max_length=32, verbose_name='Tipo')),
                ('underlying', models.CharField(max_length=128, verbose_name='Ativo objeto')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_group', models.CharField(choices=[('alternative', 'Alternativo'), ('international', 'Internacional'), ('multimarket', 'Multimercado'), ('inflation', 'Inflação'), ('pre_fixed_income', 'Pré-fixado'), ('post_fixed_income', 'Pós-fixado'), ('variable_income', 'Renda Variável')], max_length=64, verbose_name='Grupo')),
                ('fund_code', models.IntegerField(verbose_name='Código do Fundo')),
                ('fund_id', models.IntegerField(verbose_name='ID do Fundo')),
                ('gross_income', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Rendimento bruto')),
                ('gross_value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='grossValue')),
                ('uuid', models.UUIDField(verbose_name='UUID')),
                ('iof', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='IOF')),
                ('ir', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='IR')),
                ('is_processing', models.BooleanField(verbose_name='Processando')),
                ('liquid_income', models.FloatField(verbose_name='Rendimento líquido')),
                ('liquid_value', models.FloatField(verbose_name='Valor líquido')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('product', models.CharField(max_length=256, verbose_name='Produto')),
                ('quota_amount', models.FloatField(verbose_name='Quantidade de cotas')),
                ('quota_date', models.DateField(verbose_name='Data da cota')),
                ('quota_value', models.FloatField(verbose_name='Valor da cota')),
                ('quotation_value', models.FloatField(verbose_name='quotationValue')),
                ('type_code', models.IntegerField(verbose_name='Código do tipo')),
                ('withdrawal_blocked', models.BooleanField(verbose_name='Bloqueado')),
                ('withdrawal_liquidation', models.CharField(max_length=256, verbose_name='Resgate (liquidação)')),
                ('withdrawal_quota', models.CharField(max_length=256, verbose_name='Resgate (cotização)')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investment_fund', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('life', 'Vida')], max_length=128, verbose_name='Tipo de cobertura')),
                ('status', models.CharField(max_length=128, verbose_name='Status')),
                ('premium', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prêmio')),
                ('product', models.CharField(max_length=256, verbose_name='Tipo de produto')),
                ('contract_date', models.DateField(verbose_name='Data de Contrato')),
                ('insurer', models.CharField(max_length=128, verbose_name='Seguradora')),
                ('insured_capital', models.FloatField(verbose_name='Capital segurado')),
                ('coverage_type', models.IntegerField(verbose_name='Tipo de cobertura')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='HubCookie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_time', models.DateTimeField(verbose_name='Autenticado em')),
                ('expires_at', models.DateTimeField(verbose_name='Expira em')),
                ('access_token', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9]{64}$')], verbose_name='Token de acesso')),
                ('refused', models.BooleanField(default=False, verbose_name='Recusado')),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Assessor')),
            ],
            options={
                'verbose_name': 'HUB Cookie',
                'verbose_name_plural': 'HUB Cookies',
                'ordering': ['-expires_at'],
            },
        ),
        migrations.CreateModel(
            name='Gold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Peso (gramas)')),
                ('product', models.CharField(max_length=128, verbose_name='Ativo')),
                ('contracts', models.IntegerField(verbose_name='Contratos')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gold', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Future',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_quantity', models.IntegerField(verbose_name='Quantidade do dia')),
                ('description', models.CharField(max_length=128, verbose_name='Descrição')),
                ('due_date', models.DateField(verbose_name='Data de vencimento')),
                ('goods', models.CharField(max_length=128, verbose_name='Mercadoria')),
                ('ticker', models.CharField(max_length=128, verbose_name='Instrumento')),
                ('market', models.CharField(max_length=128, verbose_name='Mercado')),
                ('position', models.IntegerField(verbose_name='Posição')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='future', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='FixedIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_group', models.CharField(choices=[('fixed', 'Prefixada'), ('post_fixed', 'Pós-fixada'), ('inflation', 'Inflação')], max_length=64, verbose_name='Grupo')),
                ('asset', models.CharField(max_length=128, verbose_name='Ativo')),
                ('available', models.IntegerField(verbose_name='Disponível')),
                ('issuer', models.CharField(max_length=128, verbose_name='Emissor')),
                ('lack', models.DateField(blank=True, null=True, verbose_name='Carência')),
                ('maturity', models.DateField(verbose_name='Vencimento')),
                ('position', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('product_id', models.IntegerField(verbose_name='ID do Produto')),
                ('product', models.CharField(choices=[('cdb', 'CDB'), ('cra', 'CRA'), ('cri', 'CRI'), ('deb', 'DEB'), ('fnd', 'FND'), ('lc', 'LC'), ('lca', 'LCA'), ('lci', 'LCI'), ('lf', 'LF'), ('lfsn', 'LFSN'), ('lft', 'LFT'), ('ltn', 'LTN'), ('ntn-b', 'NTN-B'), ('ntn-f', 'NTN-F')], max_length=64, verbose_name='Produto')),
                ('start', models.DateField(verbose_name='Aplicação')),
                ('tax', models.CharField(max_length=128, verbose_name='Taxa')),
                ('type_code', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], verbose_name='Type Code')),
                ('applied_value', models.FloatField(verbose_name='Valor aplicado')),
                ('warranty', models.FloatField(verbose_name='Garantia')),
                ('amount', models.IntegerField(verbose_name='Quantidade')),
                ('pu_date', models.DateField(verbose_name='Data Preço')),
                ('gross_income', models.FloatField(verbose_name='Rendimento bruto')),
                ('gross_value', models.FloatField(verbose_name='Posição')),
                ('interest', models.CharField(blank=True, max_length=128, null=True, verbose_name='Juros')),
                ('iof', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='IOF')),
                ('ir', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='IR')),
                ('last_deposit_at', models.DateField(verbose_name='Aplicação')),
                ('liquid_income', models.FloatField(verbose_name='Rendimento líquido')),
                ('liquid_value', models.FloatField(verbose_name='Valor líquido')),
                ('liquidity', models.CharField(max_length=64, verbose_name='Liquidez')),
                ('paper', models.CharField(max_length=128, verbose_name='Papel')),
                ('pu_price', models.FloatField(verbose_name='Preço')),
                ('rating', models.CharField(max_length=128, verbose_name='Rating')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixed_income', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Equity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Cotação')),
                ('financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro')),
                ('available', models.IntegerField(verbose_name='Quantidade')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('ticker', models.CharField(max_length=128, verbose_name='Ticker')),
                ('average_cost', models.FloatField(verbose_name='Custo médio')),
                ('performance', models.FloatField(verbose_name='Performance')),
                ('quantity_day', models.IntegerField(blank=True, null=True, verbose_name='Quantidade do dia')),
                ('warranty_bovespa', models.IntegerField(verbose_name='Garantia bovespa')),
                ('warranty_bvmf', models.IntegerField(verbose_name='Garantia BVMF')),
                ('average_cost_status', models.IntegerField(verbose_name='Status de custo médio')),
                ('quantity_projected', models.IntegerField(verbose_name='Quantidade projetada')),
                ('quantity_structured', models.IntegerField(verbose_name='Quantidade estruturado')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equity', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_group', models.CharField(choices=[('equity', 'Ações'), ('real_estate', 'Fundos Imobiliários'), ('fixed_income', 'Renda Fixa')], max_length=128, verbose_name='Sub Grupo')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('type', models.CharField(max_length=128, verbose_name='Tipo')),
                ('product', models.CharField(max_length=128, verbose_name='Produto')),
                ('provisioned_value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor provisionado')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earning', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Coe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateField(verbose_name='Data da aplicação')),
                ('applied_value', models.FloatField(verbose_name='Valor aplicado')),
                ('due_date', models.DateField(verbose_name='Data de vencimento')),
                ('issuer', models.CharField(choices=[('bnp_paribas', 'BNP Paribas'), ('citibank', 'Citibank'), ('credit_suisse', 'Credit Suisse'), ('goldman_sachs', 'Goldman Sachs'), ('jp_morgan', 'JP Morgan'), ('morgan_stanley', 'Morgan Stanley'), ('xp', 'XP')], max_length=256, verbose_name='Emissor')),
                ('gross_value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor bruto')),
                ('name', models.CharField(max_length=256, verbose_name='Nome')),
                ('product_id', models.BigIntegerField(verbose_name='ID do Produto')),
                ('quantity', models.IntegerField(verbose_name='Quantidade')),
                ('unit_price', models.FloatField(verbose_name='Preço unitário')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coe', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.FloatField(verbose_name='Porcento da carteira em saldo')),
                ('available_balance', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo Disponível')),
                ('warranty', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Garantia')),
                ('pending_withdrawal_funds', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Resgate de Fundo Pendente')),
                ('pending_withdrawal_clubs', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Resgate de Clube Pendente')),
                ('expiring_terms', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Termos a Vencer')),
                ('margin_account', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Utilização de Conta Margem')),
                ('future_releases', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Lançamentos Futuros')),
                ('projected_balance_1', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo em D+1')),
                ('projected_balance_1_date', models.DateField(verbose_name='Data D+1')),
                ('projected_balance_2', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo em D+2')),
                ('projected_balance_2_date', models.DateField(verbose_name='Data D+2')),
                ('projected_balance_3', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo em D+3')),
                ('projected_balance_3_date', models.DateField(verbose_name='Data D+3')),
                ('projected_balance_over', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo em D>3')),
                ('total_projected_balance', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo Total Projetado')),
                ('warranty_bmf', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Garantia BM&F')),
                ('warranty_bovespa', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Garantia Bovespa')),
                ('withdraw_balance', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Disponível para saque')),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='balance', to='xpaccount.positions')),
            ],
        ),
        migrations.CreateModel(
            name='AssetsWarrantyTreasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=128, verbose_name='Tipo de Produto')),
                ('due_date', models.DateField(verbose_name='Vencimento')),
                ('last_quote', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Última cotação')),
                ('total_financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('total_quantity', models.IntegerField(verbose_name='Quantidade em Garantia')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treasures', to='xpaccount.assetswarranty')),
            ],
        ),
        migrations.CreateModel(
            name='AssetsWarrantyFixedIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=128, verbose_name='Tipo de Produto')),
                ('issuer', models.CharField(max_length=128, verbose_name='Emissor')),
                ('due_date', models.DateField(verbose_name='Vencimento')),
                ('total_financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Posição')),
                ('total_quantity', models.IntegerField(verbose_name='Quantidade em Garantia')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fixed_incomes', to='xpaccount.assetswarranty')),
            ],
        ),
        migrations.CreateModel(
            name='AssetsWarrantyEquity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_bovespa', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro Bovespa')),
                ('financial_bvmf', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Financeiro BVMF')),
                ('ticker', models.CharField(max_length=128, verbose_name='Ativo')),
                ('total_financial', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total Financeiro')),
                ('total_quantity', models.IntegerField(verbose_name='Quantidade Total')),
                ('unitary_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Preço unitário')),
                ('warranty_bov', models.IntegerField(verbose_name='Garantia Bov')),
                ('warranty_bvmf', models.IntegerField(verbose_name='Garantia BVMF')),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='equities', to='xpaccount.assetswarranty')),
            ],
        ),
        migrations.AddField(
            model_name='assetswarranty',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets_warranty', to='xpaccount.positions'),
        ),
        migrations.AddConstraint(
            model_name='positions',
            constraint=models.UniqueConstraint(condition=models.Q(('fresh', True)), fields=('xp_account',), name='one_fresh_positions_per_xpaccount'),
        ),
    ]
